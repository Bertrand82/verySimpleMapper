// Generated by atom.tools.very.simple.generator.tostring.GeneratorToString
package atom.generated.factory;

import atom.tools.very.simple.mapper.p1.Adress;
import atom.tools.very.simple.mapper.p1.Info;
import atom.tools.very.simple.mapper.p1.Voiture;
import java.lang.String;

/**
 * Cette Class propose un factory utile pour les tests 
 * Class : 	atom.tools.very.simple.mapper.p1.Info
 *
 *
 *   */
public class ToString_Info {
    /**
     *
     * Seule methode public de la classe
     */
    public static String toString(Info o) {
        return toString_Info(o);
    }

    protected static String toString_Info(Info o) {
        int i=0;
        String s =  "{";
         s +="\"a\" :   \"" + o.getA()+"\" ,\n";
         s +="\"aazzzzzz\" :   \"" + o.getAazzzzzz()+"\" ,\n";
         s += "\"b\" : " + o.getB()+",\n";
         s +="\"adress\" :   " +toString_Adress (o.getAdress())+",\n";
        i=0;
         s +="\"ls\" : [  ";
        if(  o.getLs()== null) {
             s += "\n";
        } else {
            for( String x : o.getLs()) {
                if( i > 0) {
                    s +=",\n" ;
                }
                i++;
                 s +=" \""+x +"\"";
            }
        }
         s +="],\n  ";
        i=0;
         s +="\"ls2\" : [  ";
        if(  o.getLs2()== null) {
             s += "\n";
        } else {
            for( String x : o.getLs2()) {
                if( i > 0) {
                    s +=",\n" ;
                }
                i++;
                 s +=" \""+x +"\"";
            }
        }
         s +="],\n  ";
        i=0;
         s +="\"ls3\" : [  ";
        if(  o.getLs3()== null) {
             s += "\n";
        } else {
            for( String x : o.getLs3()) {
                if( i > 0) {
                    s +=",\n" ;
                }
                i++;
                 s +=" \""+x +"\"";
            }
        }
         s +="],\n  ";
        i=0;
         s +="\"voitures\" : [  ";
        if(  o.getVoitures()== null) {
             s += "\n";
        } else {
            for( Voiture x : o.getVoitures()) {
                if( i > 0) {
                    s +=",\n" ;
                }
                i++;
                s += toString_Voiture( x)+"\"";
            }
        }
         s +="],\n  ";
         s += "\"pays\" :  \"" + o.getPays()+"\"  \n";
        s +=  "}";
        return s;
    }

    protected static String toString_Adress(Adress o) {
        int i=0;
        String s =  "{";
         s +="\"rue\" :   \"" + o.getRue()+"\" ,\n";
         s +="\"ville\" :   \"" + o.getVille()+"\" ,\n";
         s += "\"departement\" : " + o.getDepartement()+" \n";
        s +=  "}";
        return s;
    }

    protected static String toString_String(String o) {
        int i=0;
        String s =  "{";
        s +=  "}";
        return s;
    }

    protected static String toString_Voiture(Voiture o) {
        int i=0;
        String s =  "{";
         s +="\"nom\" :   \"" + o.getNom()+"\"  \n";
        s +=  "}";
        return s;
    }

    /**
     *
     * Rajoute virgule
     */
    private static String virg(int i, int j) {
        if (i <j) {
            return ",";
        } else {
            return "aaaaaaaaaaaaaaaaaa,bbbbbbbbb";
        }
    }
}
